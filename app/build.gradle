plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.trendflick'
    compileSdk 34

    buildFeatures {
        compose true
        buildConfig true
    }

    defaultConfig {
        applicationId "com.trendflick"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        // Load secrets
        def secretsFile = rootProject.file("secrets.properties")
        def secrets = new Properties()
        if (secretsFile.exists()) {
            secrets.load(new FileInputStream(secretsFile))
        }

        buildConfigField "String", "BLUESKY_HANDLE", "\"${secrets.getProperty('BLUESKY_HANDLE', '')}\""
        buildConfigField "String", "BLUESKY_APP_PASSWORD", "\"${secrets.getProperty('BLUESKY_APP_PASSWORD', '')}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    packaging {
        resources {
            excludes += [
                'META-INF/LICENSE.md',
                'META-INF/LICENSE-notice.md'
            ]
        }
    }
}

// KSP Configuration
ksp {
    arg("moshi.generated", "javax.annotation.processing.Generated")
    arg("ksp.incremental", "false") // Temporarily disable incremental processing
}

dependencies {
    // Core dependencies
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.9.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.activity:activity-compose:1.8.2'
    
    // Room
    def room_version = "2.6.1"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    
    // CameraX
    def camerax_version = "1.3.1"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"
    
    // Coil for Image Loading
    implementation "io.coil-kt:coil-compose:2.5.0"
    
    // Accompanist for Permissions
    implementation "com.google.accompanist:accompanist-permissions:0.32.0"
    
    // Splash Screen
    implementation 'androidx.core:core-splashscreen:1.0.1'
    
    // Security
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'
    
    // Compose
    implementation platform('androidx.compose:compose-bom:2023.10.01')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material-icons-extended'
    
    // Navigation
    implementation 'androidx.navigation:navigation-compose:2.7.6'
    
    // Hilt
    implementation 'com.google.dagger:hilt-android:2.48'
    ksp 'com.google.dagger:hilt-compiler:2.48'
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0'
    
    // Media
    implementation 'androidx.media3:media3-exoplayer:1.2.0'
    implementation 'androidx.media3:media3-ui:1.2.0'
    
    // Moshi
    implementation "com.squareup.moshi:moshi:1.15.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.15.0"
    ksp "com.squareup.moshi:moshi-kotlin-codegen:1.15.0"
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
    
    // Networking
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    
    // Testing
    testImplementation "io.mockk:mockk:1.13.9"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "junit:junit:4.13.2"
    testImplementation "com.google.truth:truth:1.1.5"
    testImplementation "org.jetbrains.kotlin:kotlin-test:1.9.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.9.0"
    
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    androidTestImplementation "io.mockk:mockk-android:1.13.9"
} 