plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp' version '1.9.0-1.0.13'
    id 'com.google.dagger.hilt.android'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.0'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    namespace 'com.trendflick'
    compileSdk 34

    buildFeatures {
        compose true
        buildConfig true
    }

    // Load keystore properties
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'] ?: "../app/release/trendflick.keystore")
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    defaultConfig {
        applicationId "com.trendflick"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        // Room schema configuration
        ksp {
            arg("room.schemaLocation", "$projectDir/schemas")
            arg("room.incremental", "true")
            arg("room.expandProjection", "true")
            
            // Add Moshi KSP arguments
            arg("moshi.generateProguardRules", "true")
            arg("moshi.duplicateFields", "warn")
        }

        // Load secrets
        def secretsFile = rootProject.file("secrets.properties")
        def secrets = new Properties()
        if (secretsFile.exists()) {
            secrets.load(new FileInputStream(secretsFile))
        }

        // Get credentials from environment variables, fallback to secrets file
        def blueskyHandle = System.getenv("BLUESKY_HANDLE") ?: secrets.getProperty('BLUESKY_HANDLE', '')
        def blueskyPassword = System.getenv("BLUESKY_APP_PASSWORD") ?: secrets.getProperty('BLUESKY_APP_PASSWORD', '')
        
        buildConfigField "String", "BLUESKY_HANDLE", "\"${blueskyHandle}\""
        buildConfigField "String", "BLUESKY_APP_PASSWORD", "\"${blueskyPassword}\""
        buildConfigField "String", "OPENAI_API_KEY", "\"${secrets.getProperty('OPENAI_API_KEY', '')}\""
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            // Debug configuration without changing the application ID
            versionNameSuffix "-debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    packaging {
        resources {
            excludes += [
                'META-INF/LICENSE.md',
                'META-INF/LICENSE-notice.md'
            ]
        }
    }
}

dependencies {
    implementation platform("org.jetbrains.kotlin:kotlin-bom:1.9.0")
    
    // Core dependencies
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.activity:activity-compose:1.8.2'
    
    // Compose Runtime
    implementation "androidx.compose.runtime:runtime:1.5.4"
    implementation "androidx.compose.runtime:runtime-livedata:1.5.4"
    
    // Kotlin Result
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"
    
    // Room
    def room_version = "2.6.1"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    
    // CameraX
    def camerax_version = "1.3.0-rc01"
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-video:$camerax_version"
    implementation "androidx.camera:camera-view:$camerax_version"
    implementation "androidx.camera:camera-extensions:$camerax_version"
    
    // Coil for Image Loading
    implementation "io.coil-kt:coil-compose:2.5.0"
    
    // Accompanist for Permissions
    implementation "com.google.accompanist:accompanist-permissions:0.32.0"
    
    // Splash Screen
    implementation 'androidx.core:core-splashscreen:1.0.1'
    
    // Security
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'
    
    // Compose
    implementation platform('androidx.compose:compose-bom:2023.10.01')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material-icons-extended'
    
    // Navigation
    implementation 'androidx.navigation:navigation-compose:2.7.6'
    
    // Hilt
    implementation "com.google.dagger:hilt-android:2.48"
    ksp "com.google.dagger:hilt-android-compiler:2.48"
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0'
    
    // Media
    implementation "androidx.media3:media3-exoplayer:1.2.0"
    implementation "androidx.media3:media3-ui:1.2.0"
    implementation "androidx.media3:media3-common:1.2.0"
    
    // Moshi
    implementation "com.squareup.moshi:moshi:1.15.1"
    implementation "com.squareup.moshi:moshi-kotlin:1.15.1"
    ksp "com.squareup.moshi:moshi-kotlin-codegen:1.15.1"
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
    
    // Retrofit + OkHttp
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.12.0"
    
    // Testing
    testImplementation "io.mockk:mockk:1.13.9"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "junit:junit:4.13.2"
    testImplementation "com.google.truth:truth:1.1.5"
    testImplementation "org.jetbrains.kotlin:kotlin-test:1.9.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.9.0"
    
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    androidTestImplementation "io.mockk:mockk-android:1.13.9"
    
    // OpenAI
    implementation 'com.aallam.openai:openai-client:3.6.3'
    implementation 'io.ktor:ktor-client-android:2.3.7'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.2'
    
    // Firebase
    implementation platform('com.google.firebase:firebase-bom:32.7.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.7.3'
    
    // Google Play Services
    implementation 'com.google.android.gms:play-services-auth:20.7.0'
    
    // Gson
    implementation "com.google.code.gson:gson:2.10.1"

    // Material
    implementation "androidx.compose.material:material:1.5.4"

    // Pull to refresh
    implementation "androidx.compose.material:material:1.5.4"

    // Hilt
    implementation 'com.google.dagger:hilt-android:2.48'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    ksp 'androidx.hilt:hilt-compiler:1.0.0'
    ksp 'com.google.dagger:hilt-android-compiler:2.48'

    // Accompanist Swipe Refresh
    implementation "com.google.accompanist:accompanist-swiperefresh:0.32.0"

    // Material Design 3
    implementation "androidx.compose.material3:material3:1.1.2"
    implementation "androidx.compose.material:material-icons-extended:1.5.4"

    // Compose Dependencies
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.7.0"
    implementation "androidx.compose.runtime:runtime:1.5.4"
    implementation "androidx.compose.runtime:runtime-livedata:1.5.4"
    implementation "androidx.compose.material3:material3:1.1.2"
    implementation "androidx.hilt:hilt-navigation-compose:1.1.0"
    
    // Coil for image loading
    implementation "io.coil-kt:coil-compose:2.5.0"
} 